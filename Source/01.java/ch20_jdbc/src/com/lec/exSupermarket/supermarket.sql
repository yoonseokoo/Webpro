--CONSTRUCTING TABLE

DROP TABLE CUSTOMER;
DROP TABLE CUS_LEVEL;


CREATE TABLE CUS_LEVEL(
    LEVELNO NUMBER(1,0) PRIMARY KEY,
    LEVELNAME VARCHAR(20),
    LOW NUMBER(9,0),
    HIGH NUMBER (9,0));
    
INSERT INTO CUS_LEVEL VALUES (1, 'NORMAL', 0 , 999999);
INSERT INTO CUS_LEVEL VALUES (2, 'SILVER', 1000000, 1999999);
INSERT INTO CUS_LEVEL VALUES (3, 'GOLD', 2000000, 2999999);
INSERT INTO CUS_LEVEL VALUES (4, 'VIP', 3000000, 3999999);
INSERT INTO CUS_LEVEL VALUES (5, 'VVIP', 4000000, 999999999);

COMMIT;
    
CREATE TABLE CUSTOMER(
    CID NUMERIC(6,0) PRIMARY KEY,
    CTEL VARCHAR(20),
    CNAME VARCHAR(30),
    CPOINT NUMERIC(10,0) DEFAULT 1000,
    CAMOUNT NUMERIC (10,0) DEFAULT 0,
    LEVELNO NUMERIC (1,0) REFERENCES CUS_LEVEL(LEVELNO));


DROP SEQUENCE CUSTOMER_SQ;

CREATE SEQUENCE  CUSTOMER_SQ
   MAXVALUE 99999 
    NOCACHE 
    NOCYCLE;
    
INSERT INTO CUSTOMER (CID, CTEL, CNAME, CPOINT, LEVELNO, CAMOUNT) 
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-1234-5678', '홍길동', 2800,  2, 1340000);

INSERT INTO CUSTOMER (CID, CTEL, CNAME, LEVELNO, CAMOUNT) 
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-73434-2532', '신길동', 4, 3070000);   
    
INSERT INTO CUSTOMER (CID, CTEL, CNAME, LEVELNO, CAMOUNT)   
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-2642-4545', '김길동', 1, 540000); 
    
INSERT INTO CUSTOMER (CID, CTEL, CNAME, LEVELNO, CAMOUNT) 
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-3463-2634', '최길동', 3, 2500000);

INSERT INTO CUSTOMER (CID, CTEL, CNAME, LEVELNO, CAMOUNT) 
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-9865-4564', '박길동', 5, 6700000);

INSERT INTO CUSTOMER (CID, CTEL, CNAME, CPOINT, LEVELNO, CAMOUNT) 
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-2345-8765', '홍길동', 7600,  2, 1780000);
    
INSERT INTO CUSTOMER (CID, CTEL, CNAME, LEVELNO, CAMOUNT) 
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-6433-2634', '이길동', 3, 2634000);
    
SELECT *
    FROM CUSTOMER;
    
SELECT *
    FROM CUS_LEVEL;
    
    COMMIT;
    
DELETE FROM CUSTOMER WHERE CNAME='010-2345-6345';
    
-- QUERY to be used in the programme
-- 0. Searching level name : Vector<String> getLevelNames()

SELECT LEVELNAME 
    FROM CUS_LEVEL;

-- 1. Search user through CID : CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLEVELUP
-- CustomerDto cIdGetCustomer(int cId)

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER  WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP -- If the ID is the name as the user's ID
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND CID=3;
    
-- 2.Search thROugh the last 4 digits of telephone: CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,  forLevelUp
--ArrayList<CustomerDto> cTelGetCustomer(String ctel);

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER  WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND CTEL LIKE '%'||'4564'; -- since % is only in the beginning, whatever comes in front, it looks for numbers that end with those four numbers

-- 3. Search customer name: CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLevelUp
-- ArrayList<CustomerDto> cNameGetCustomer(String cname);

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER  WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND CNAME = '홍길동' 
    ORDER BY CAMOUNT DESC;
        
-- 4. Buy using CPOINT (1000원짜리를 포인트로만 구매) :
-- int buyWithPoint(int cId, int camount)

UPDATE CUSTOMER
    SET CPOINT = CPOINT - 100
    WHERE CID = 2;

-- 5. Buy product (increase CPOINT by 5% of the product price)
--  int buy(int cAmount, int cId)
-- update cPoint, cAmount, levelNo

UPDATE CUSTOMER
    SET CPOINT = CPOINT + (1000000*0.05), 
            CAMOUNT = CAMOUNT + 1000000,
            LEVELNO = (SELECT L.LEVELNO
                                FROM CUSTOMER C, CUS_LEVEL L 
                                WHERE CAMOUNT + 1000000 BETWEEN LOW AND HIGH AND CID=2)
        WHERE CID = 2;
    
-- 6. Print by level: CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLevelUp
-- ArrayList<CustomerDto> levelNameGetCustomer (String levelname)

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER  WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    AND LEVELNAME = 'NORMAL'
    ORDER BY CAMOUNT DESC;
    
-- 7.Print all info - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,  forLevelUp
-- ArrayList<CustomerDto> getCustomers()

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER  WHERE CID=C.CID AND LEVELNO!=5) forLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO
    ORDER BY CAMOUNT DESC;
    
-- 8. Register new Account (INSERT CNAME and CTEL)
--  int insertCustomer(String ctel, String cname) or int insertCustomer(CustomerDto dto)

INSERT INTO CUSTOMER (CID, CTEL, CNAME) 
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-5234-9567', '유길동');

-- 9. Edit phone number :
-- int updateCustomer(int cid, String ctel)

UPDATE CUSTOMER
    SET CTEL = '010-2534-6364' 
    WHERE CID = 4;
    
-- 10. Delete account : 
-- int deleteCustomer(String ctel)
    
    DELETE FROM CUSTOMER
        WHERE CTEL = '010-2534-6364' ;
        COMMIT;
    
    
    
    
    
    
    
    
    
    
    
    